diff --git a/package-lock.json b/package-lock.json
index 12e5454..e9c023f 100644
--- a/package-lock.json
+++ b/package-lock.json
@@ -4855,6 +4855,7 @@
       "version": "3.0.1",
       "resolved": "https://registry.npmjs.org/pinia/-/pinia-3.0.1.tgz",
       "integrity": "sha512-WXglsDzztOTH6IfcJ99ltYZin2mY8XZCXujkYWVIJlBjqsP6ST7zw+Aarh63E1cDVYeyUcPCxPHzJpEOmzB6Wg==",
+      "license": "MIT",
       "dependencies": {
         "@vue/devtools-api": "^7.7.2"
       },
diff --git a/src/components/NavMenu.vue b/src/components/NavMenu.vue
index 7ab7317..2ed0b32 100644
--- a/src/components/NavMenu.vue
+++ b/src/components/NavMenu.vue
@@ -29,7 +29,7 @@ const isOpen = ref(false)
 
 const menuItems = [
   { name: 'Home', path: '/' },
-  { name: 'Cancer Chart', path: '/cancer-chart' },
+  { name: 'Cancer Insights', path: '/cancer-chart' },
   { name: 'UV Indicator', path: '/uv-indicator' },
   { name: 'Recommendation', path: '/recommendation' },
   { name: 'Set Reminders', path: '/reminder' },
diff --git a/src/components/NextPageArrow.vue b/src/components/NextPageArrow.vue
index 1108f82..0d06d10 100644
--- a/src/components/NextPageArrow.vue
+++ b/src/components/NextPageArrow.vue
@@ -1,8 +1,6 @@
 <template>
-  <div class="next-page-arrow" @click="navigateToNextPage">
-    <div class="arrow-container">
-      <span class="arrow-down"></span>
-    </div>
+  <div class="next-page-container" @click="navigateToNextPage">
+    <button class="next-page-button">Next Page</button>
     <div class="next-page-text">{{ nextPageName }}</div>
   </div>
 </template>
@@ -23,42 +21,42 @@ const navigateToNextPage = () => {
 </script>
 
 <style scoped>
-.next-page-arrow {
+.next-page-container {
   display: flex;
   flex-direction: column;
   align-items: center;
   margin-top: 30px;
   margin-bottom: 20px;
   cursor: pointer;
-  transition: transform 0.3s;
 }
 
-.next-page-arrow:hover {
-  transform: translateY(5px);
+.next-page-button {
+  padding: 12px 24px;
+  background: linear-gradient(135deg, #1976d2, #1565c0);
+  color: white;
+  border: none;
+  border-radius: 30px;
+  font-size: 16px;
+  font-weight: 600;
+  letter-spacing: 0.5px;
+  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
+  cursor: pointer;
+  transition: all 0.3s ease;
 }
 
-.arrow-container {
-  width: 50px;
-  height: 50px;
-  background: #007bff;
-  border-radius: 50%;
-  display: flex;
-  align-items: center;
-  justify-content: center;
-  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
-  margin-bottom: 10px;
+.next-page-button:hover {
+  transform: translateY(-2px);
+  box-shadow: 0 6px 12px rgba(0, 0, 0, 0.25);
+  background: linear-gradient(135deg, #1e88e5, #1976d2);
 }
 
-.arrow-down {
-  width: 15px;
-  height: 15px;
-  border-right: 3px solid white;
-  border-bottom: 3px solid white;
-  transform: rotate(45deg);
-  margin-top: -5px;
+.next-page-button:active {
+  transform: translateY(1px);
+  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
 }
 
 .next-page-text {
+  margin-top: 10px;
   font-size: 14px;
   font-weight: 500;
   color: #555;
diff --git a/src/views/CancerChartView.vue b/src/views/CancerChartView.vue
index d04565e..0d3705b 100644
--- a/src/views/CancerChartView.vue
+++ b/src/views/CancerChartView.vue
@@ -7,7 +7,7 @@
           <i class="fas fa-umbrella-beach"></i> Sun Protector
         </router-link>
         <router-link to="/cancer-chart" class="nav-button active">
-          <i class="fas fa-chart-bar"></i> Cancer Chart
+          <i class="fas fa-chart-bar"></i> Cancer Insights
         </router-link>
         <router-link to="/uv-indicator" class="nav-button">
           <i class="fas fa-sun"></i> UV Indicator
@@ -23,7 +23,7 @@
 
     <div class="content">
       <div class="recommendation-section">
-        <h2><i class="fas fa-chart-bar icon-title"></i> Cancer Chart</h2>
+        <h2><i class="fas fa-chart-bar icon-title"></i> Cancer Insights</h2>
         <div class="sub-description">
           <p>💡 Select gender or age group to view skin cancer cases from 1960 to 2024</p>
         </div>
@@ -55,6 +55,16 @@
             <div class="chart-container">
               <canvas ref="cancerChart"></canvas>
             </div>
+
+            <div class="chart-description">
+              <p>
+                This chart visualizes the trends in skin cancer incidence (blue) and mortality (red)
+                across different gender and age groups. Users can select a gender and age range to
+                generate a corresponding data visualization. The line graph illustrates how
+                incidence and mortality rates have changed over the years, providing insights into
+                the long-term trends of the disease within specific demographics.
+              </p>
+            </div>
           </div>
         </div>
       </div>
@@ -82,9 +92,25 @@ let chartInstance: Chart | null = null
 const selectedGender = ref('all')
 
 const ageGroups = ref([
-  '0-4', '5-9', '10-14', '15-19', '20-24', '25-29', '30-34',
-  '35-39', '40-44', '45-49', '50-54', '55-59', '60-64', '65-69',
-  '70-74', '75-79', '80-84', '85-89', 'All ages combine'
+  '0-4',
+  '5-9',
+  '10-14',
+  '15-19',
+  '20-24',
+  '25-29',
+  '30-34',
+  '35-39',
+  '40-44',
+  '45-49',
+  '50-54',
+  '55-59',
+  '60-64',
+  '65-69',
+  '70-74',
+  '75-79',
+  '80-84',
+  '85-89',
+  'All ages combine',
 ])
 
 // const generateChart = async () => {
@@ -182,9 +208,9 @@ const generateChart = async () => {
 
     const data: CancerDataEntry[] = response.data
 
-    const years = data.map(entry => entry.year)
-    const incidenceCounts = data.map(entry => Number(entry.incidence_count))
-    const mortalityCounts = data.map(entry => Number(entry.mortality_count))
+    const years = data.map((entry) => entry.year)
+    const incidenceCounts = data.map((entry) => Number(entry.incidence_count))
+    const mortalityCounts = data.map((entry) => Number(entry.mortality_count))
 
     await nextTick()
     if (chartInstance) chartInstance.destroy()
@@ -265,13 +291,11 @@ const generateChart = async () => {
   }
 }
 
-
 onMounted(() => {
   generateChart()
 })
 </script>
 
-
 <style scoped>
 .page-container {
   display: flex;
@@ -590,6 +614,20 @@ h2 {
   transform: scale(1.01);
 }
 
+.chart-description {
+  margin-top: 30px;
+  padding: 20px;
+  background-color: rgba(255, 255, 255, 0.8);
+  border-left: 4px solid #3498db;
+  border-radius: 10px;
+  box-shadow: 0 5px 15px rgba(52, 152, 219, 0.15);
+  text-align: left;
+  font-size: 15px;
+  line-height: 1.6;
+  color: #444;
+  animation: fadeIn 0.8s ease;
+}
+
 .loading {
   display: flex;
   justify-content: center;
diff --git a/src/views/HomeView.vue b/src/views/HomeView.vue
index 6f4fcd7..9ac579d 100644
--- a/src/views/HomeView.vue
+++ b/src/views/HomeView.vue
@@ -7,7 +7,7 @@
           <i class="fas fa-umbrella-beach"></i> Sun Protector
         </router-link>
         <router-link to="/cancer-chart" class="nav-button">
-          <i class="fas fa-chart-bar"></i> Cancer Chart
+          <i class="fas fa-chart-bar"></i> Cancer Insights
         </router-link>
         <router-link to="/uv-indicator" class="nav-button">
           <i class="fas fa-sun"></i> UV Indicator
@@ -48,7 +48,7 @@
         </div>
       </div>
 
-      <NextPageArrow nextRoute="/cancer-chart" nextPageName="Cancer Chart" />
+      <NextPageArrow nextRoute="/cancer-chart" nextPageName="Cancer Insights" />
     </div>
   </div>
 </template>
diff --git a/src/views/RecommendationView.vue b/src/views/RecommendationView.vue
index d12a9e2..d184cf1 100644
--- a/src/views/RecommendationView.vue
+++ b/src/views/RecommendationView.vue
@@ -7,7 +7,7 @@
           <i class="fas fa-umbrella-beach"></i> Sun Protector
         </router-link>
         <router-link to="/cancer-chart" class="nav-button">
-          <i class="fas fa-chart-bar"></i> Cancer Chart
+          <i class="fas fa-chart-bar"></i> Cancer Insights
         </router-link>
         <router-link to="/uv-indicator" class="nav-button">
           <i class="fas fa-sun"></i> UV Indicator
@@ -32,18 +32,40 @@
           <!-- 皮肤类型选择 -->
           <div class="skin-tone-section">
             <label for="skinTone"><i class="fas fa-palette"></i> Skin Tone:</label>
-            <select v-model="selectedSkinTone" id="skinTone">
-              <option value="dark-brown">Dark Brown</option>
-              <option value="brown">Brown</option>
-              <option value="light-brown">Light Brown</option>
-              <option value="beige">Beige</option>
-              <option value="fair">Fair</option>
-            </select>
+            <div class="custom-select-container">
+              <select v-model="selectedSkinTone" id="skinTone">
+                <option value="dark-brown">Dark Brown</option>
+                <option value="brown">Brown</option>
+                <option value="light-brown">Light Brown</option>
+                <option value="beige">Beige</option>
+                <option value="fair">Fair</option>
+              </select>
+              <div class="selected-color-indicator" :class="selectedSkinTone + '-swatch'"></div>
+            </div>
             <button @click="fetchRecommendation" class="go-btn">
               <i class="fas fa-search"></i> Go
             </button>
           </div>
 
+          <!-- 肤色样本展示 -->
+          <div class="skin-tone-samples">
+            <div class="skin-sample dark-brown-swatch" @click="selectedSkinTone = 'dark-brown'">
+              <span>Dark Brown</span>
+            </div>
+            <div class="skin-sample brown-swatch" @click="selectedSkinTone = 'brown'">
+              <span>Brown</span>
+            </div>
+            <div class="skin-sample light-brown-swatch" @click="selectedSkinTone = 'light-brown'">
+              <span>Light Brown</span>
+            </div>
+            <div class="skin-sample beige-swatch" @click="selectedSkinTone = 'beige'">
+              <span>Beige</span>
+            </div>
+            <div class="skin-sample fair-swatch" @click="selectedSkinTone = 'fair'">
+              <span>Fair</span>
+            </div>
+          </div>
+
           <!-- 推荐结果 -->
           <div v-if="loading" class="loading">
             <p><i class="fas fa-spinner fa-spin"></i> Loading recommendations...</p>
@@ -359,10 +381,10 @@ h2 {
 
 .skin-tone-section select {
   padding: 14px 20px;
+  padding-right: 40px; /* 为颜色指示器留出空间 */
   font-size: 16px;
   border: 2px solid #bbdefb;
   border-radius: 8px;
-  margin-right: 15px;
   background-color: white;
   color: #455a64;
   box-shadow: 0 2px 5px rgba(0, 0, 0, 0.05);
@@ -500,4 +522,77 @@ h2 {
   position: relative;
   z-index: 2;
 }
-</style>
\ No newline at end of file
+
+/* 肤色样本样式 */
+.skin-tone-samples {
+  display: flex;
+  justify-content: space-between;
+  margin: 20px 0;
+  padding: 10px;
+  background-color: #f8f8f8;
+  border-radius: 8px;
+  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
+}
+
+.skin-sample {
+  display: flex;
+  flex-direction: column;
+  align-items: center;
+  cursor: pointer;
+  padding: 10px;
+  border-radius: 5px;
+  transition: all 0.2s;
+  width: 18%;
+  height: 80px;
+  justify-content: flex-end;
+  color: white;
+  text-shadow: 0 0 2px rgba(0, 0, 0, 0.9);
+  font-weight: bold;
+  box-shadow: 0 3px 6px rgba(0, 0, 0, 0.1);
+}
+
+.skin-sample:hover {
+  transform: translateY(-3px);
+  box-shadow: 0 5px 10px rgba(0, 0, 0, 0.2);
+}
+
+.dark-brown-swatch {
+  background-color: #69503b;
+}
+
+.brown-swatch {
+  background-color: #9e7142;
+}
+
+.light-brown-swatch {
+  background-color: #c19a6c;
+}
+
+.beige-swatch {
+  background-color: #e1c096;
+}
+
+.fair-swatch {
+  background-color: #f3e0be;
+  color: #333;
+  text-shadow: none;
+}
+
+.custom-select-container {
+  position: relative;
+  display: inline-block;
+  margin-right: 15px;
+}
+
+.selected-color-indicator {
+  position: absolute;
+  right: 10px;
+  top: 50%;
+  transform: translateY(-50%);
+  width: 20px;
+  height: 20px;
+  border-radius: 3px;
+  border: 1px solid #ddd;
+  pointer-events: none;
+}
+</style>
diff --git a/src/views/ReminderView.vue b/src/views/ReminderView.vue
index b0a1de5..e1ee8fe 100644
--- a/src/views/ReminderView.vue
+++ b/src/views/ReminderView.vue
@@ -7,7 +7,7 @@
           <i class="fas fa-umbrella-beach"></i> Sun Protector
         </router-link>
         <router-link to="/cancer-chart" class="nav-button">
-          <i class="fas fa-chart-bar"></i> Cancer Chart
+          <i class="fas fa-chart-bar"></i> Cancer Insights
         </router-link>
         <router-link to="/uv-indicator" class="nav-button">
           <i class="fas fa-sun"></i> UV Indicator
diff --git a/src/views/UVIndicatorView.vue b/src/views/UVIndicatorView.vue
index a79c139..8912967 100644
--- a/src/views/UVIndicatorView.vue
+++ b/src/views/UVIndicatorView.vue
@@ -7,7 +7,7 @@
           <i class="fas fa-umbrella-beach"></i> Sun Protector
         </router-link>
         <router-link to="/cancer-chart" class="nav-button">
-          <i class="fas fa-chart-bar"></i> Cancer Chart
+          <i class="fas fa-chart-bar"></i> Cancer Insights
         </router-link>
         <router-link to="/uv-indicator" class="nav-button active">
           <i class="fas fa-sun"></i> UV Indicator
@@ -25,7 +25,9 @@
       <div class="recommendation-section">
         <h2><i class="fas fa-sun icon-title"></i> UV Indicator</h2>
         <div class="sub-description">
-          <p>💡 Enter your postcode to get UV index data for different times of the day in your area</p>
+          <p>
+            💡 Enter your postcode to get UV index data for different times of the day in your area
+          </p>
         </div>
 
         <div class="main-content-box">
@@ -44,7 +46,9 @@
               />
               <button @click="fetchUVData" class="go-btn" :disabled="postcodeError">Go</button>
             </div>
-            <p v-if="postcodeError" class="error-text">Please enter a valid Victoria postcode: a 4-digit number starting with 3.</p>
+            <p v-if="postcodeError" class="error-text">
+              Please enter a valid Victoria postcode: a 4-digit number starting with 3.
+            </p>
           </div>
 
           <!-- 加载状态 -->
@@ -57,26 +61,42 @@
             <div class="uv-card">
               <h3><i class="fas fa-map-marker-alt"></i> Current Postcode: {{ uvData.postcode }}</h3>
               <canvas ref="uvChart"></canvas>
+
+              <div class="chart-description">
+                <p>
+                  This chart displays the variation of UV index over time for the selected postcode.
+                  The X-axis represents the time of day, while the Y-axis indicates the UV index
+                  level. Different colors signify varying UV intensity levels: green (low), yellow
+                  (moderate), orange (high), red (very high), and purple (extreme). Users can
+                  analyze the line graph to understand the fluctuations in UV intensity throughout
+                  the day and plan outdoor activities accordingly, minimizing exposure during peak
+                  UV periods to reduce potential skin damage. The 24-hour range provides a complete
+                  view of UV index fluctuations throughout the day. While UV levels peak during
+                  daylight hours, displaying the full cycle ensures consistency and allows for trend
+                  analysis.
+                </p>
+              </div>
             </div>
           </div>
 
-
           <!-- 报错信息 -->
           <div v-else-if="error" class="error-message">
             <p><i class="fas fa-exclamation-triangle"></i> {{ error }}</p>
           </div>
         </div>
+
+        <NextPageArrow nextRoute="/recommendation" nextPageName="Recommendation" />
       </div>
     </div>
   </div>
 </template>
 
-
 <script setup lang="ts">
-import { ref, computed, nextTick } from 'vue'
+import { ref, nextTick } from 'vue'
 import { getUVByPostcode } from '../api'
 import Chart from 'chart.js/auto'
 import { useStore } from '@/store/store'
+import NextPageArrow from '../components/NextPageArrow.vue'
 
 // UV 数据接口
 interface UVEntry {
@@ -100,34 +120,66 @@ const error = ref('')
 const chartInstance = ref<Chart | null>(null)
 const uvChart = ref<HTMLCanvasElement | null>(null)
 
-// 计算最新 UV 指数
-const latestUVIndex = computed(() => {
-  return uvData.value?.data?.length ? uvData.value.data[0].uvIndex : 0
-})
-
-// 计算最新 UV 时间
-const latestUVTime = computed(() => {
-  if (!uvData.value?.data?.length) {
-    return 'N/A'
-  }
-  return new Date(uvData.value.data[0].time).toLocaleString()
-})
-
 const allowedPostcodes = new Set([
-  3000, 3001, 3002, 3003, 3004, 3005, 3006, 3008, 3010, 3011, 3012, 3013, 3015, 3016, 3018, 3019, 3020, 3021, 3022, 3023, 3024, 3025, 3026, 3027, 3028, 3029, 3030, 3031, 3032, 3033, 3034, 3036, 3037, 3038, 3039, 3040, 3041, 3042, 3043, 3044, 3045, 3046, 3047, 3048, 3049, 3050, 3051, 3052, 3053, 3054, 3055, 3056, 3057, 3058, 3059, 3060, 3061, 3062, 3063, 3064, 3065, 3066, 3067, 3068, 3070, 3071, 3072, 3073, 3074, 3075, 3076, 3078, 3079, 3081, 3082, 3083, 3084, 3085, 3086, 3087, 3088, 3089, 3090, 3091, 3093, 3094, 3095, 3096, 3097, 3099, 3101, 3102, 3103, 3104, 3105, 3106, 3107, 3108, 3109, 3111, 3113, 3114, 3115, 3116, 3121, 3122, 3123, 3124, 3125, 3126, 3127, 3128, 3129, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138, 3139, 3140, 3141, 3142, 3143, 3144, 3145, 3146, 3147, 3148, 3149, 3150, 3151, 3152, 3153, 3154, 3155, 3156, 3158, 3159, 3160, 3161, 3162, 3163, 3164, 3165, 3166, 3167, 3168, 3169, 3170, 3171, 3172, 3173, 3174, 3175, 3176, 3177, 3178, 3179, 3180, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3188, 3189, 3190, 3191, 3192, 3193, 3194, 3195, 3196, 3197, 3198, 3199, 3200, 3201, 3202, 3204, 3205, 3206, 3207, 3211, 3212, 3213, 3214, 3215, 3216, 3217, 3218, 3219, 3220, 3221, 3222, 3223, 3224, 3225, 3226, 3227, 3228, 3230, 3231, 3232, 3233, 3234, 3235, 3236, 3237, 3238, 3239, 3240, 3241, 3242, 3243, 3249, 3250, 3251, 3254, 3260, 3264, 3265, 3266, 3267, 3268, 3269, 3270, 3271, 3272, 3273, 3274, 3275, 3276, 3277, 3278, 3279, 3280, 3281, 3282, 3283, 3284, 3285, 3286, 3287, 3289, 3292, 3293, 3294, 3300, 3301, 3302, 3303, 3304, 3305, 3309, 3310, 3311, 3312, 3314, 3315, 3317, 3318, 3319, 3321, 3322, 3323, 3324, 3325, 3328, 3329, 3330, 3331, 3332, 3333, 3334, 3335, 3336, 3337, 3338, 3340, 3341, 3342, 3345, 3350, 3351, 3352, 3353, 3354, 3355, 3356, 3357, 3358, 3360, 3361, 3363, 3364, 3370, 3371, 3373, 3374, 3375, 3377, 3378, 3379, 3380, 3381, 3384, 3385, 3387, 3388, 3390, 3391, 3392, 3393, 3395, 3396, 3399, 3400, 3401, 3402, 3407, 3409, 3412, 3413, 3414, 3415, 3418, 3419, 3420, 3423, 3424, 3427, 3428, 3429, 3430, 3431, 3432, 3433, 3434, 3435, 3437, 3438, 3440, 3441, 3442, 3444, 3446, 3447, 3448, 3450, 3451, 3453, 3458, 3460, 3461, 3462, 3463, 3464, 3465, 3467, 3468, 3469, 3472, 3475, 3477, 3478, 3480, 3482, 3483, 3485, 3487, 3488, 3489, 3490, 3491, 3494, 3496, 3498, 3500, 3501, 3502, 3505, 3506, 3507, 3509, 3512, 3515, 3516, 3517, 3518, 3520, 3521, 3522, 3523, 3525, 3527, 3529, 3530, 3531, 3533, 3537, 3540, 3542, 3544, 3546, 3549, 3550, 3551, 3552, 3554, 3555, 3556, 3557, 3558, 3559, 3561, 3562, 3563, 3564, 3565, 3566, 3567, 3568, 3570, 3571, 3572, 3573, 3575, 3576, 3579, 3580, 3581, 3583, 3584, 3585, 3586, 3588, 3589, 3590, 3591, 3594, 3595, 3596, 3597, 3599, 3607, 3608, 3610, 3612, 3614, 3616, 3617, 3618, 3619, 3620, 3621, 3622, 3623, 3624, 3629, 3630, 3631, 3632, 3633, 3634, 3635, 3636, 3637, 3638, 3639, 3640, 3641, 3643, 3644, 3646, 3647, 3649, 3658, 3659, 3660, 3661, 3662, 3663, 3664, 3665, 3666, 3669, 3670, 3671, 3672, 3673, 3675, 3676, 3677, 3678, 3682, 3683, 3685, 3687, 3688, 3689, 3690, 3691, 3694, 3695, 3697, 3698, 3699, 3700, 3701, 3704, 3705, 3707, 3708, 3709, 3711, 3712, 3713, 3714, 3715, 3717, 3718, 3719, 3720, 3722, 3723, 3724, 3725, 3726, 3727, 3728, 3730, 3732, 3733, 3735, 3736, 3737, 3738, 3739, 3740, 3741, 3744, 3746, 3747, 3749, 3750, 3751, 3752, 3753, 3754, 3755, 3756, 3757, 3758, 3759, 3760, 3761, 3762, 3763, 3764, 3765, 3766, 3767, 3770, 3775, 3777, 3778, 3779, 3781, 3782, 3783, 3785, 3786, 3787, 3788, 3789, 3791, 3792, 3793, 3795, 3796, 3797, 3799, 3800, 3802, 3803, 3804, 3805, 3806, 3807, 3808, 3809, 3810, 3812, 3813, 3814, 3815, 3816, 3818, 3820, 3821, 3822, 3823, 3824, 3825, 3831, 3832, 3833, 3835, 3840, 3841, 3842, 3844, 3847, 3850, 3851, 3852, 3853, 3854, 3856, 3857, 3858, 3859, 3860, 3862, 3864, 3865, 3869, 3870, 3871, 3873, 3874, 3875, 3878, 3880, 3882, 3885, 3886, 3887, 3888, 3889, 3890, 3891, 3892, 3893, 3895, 3896, 3898, 3900, 3902, 3903, 3904, 3909, 3910, 3911, 3912, 3913, 3915, 3916, 3918, 3919, 3920, 3921, 3922, 3923, 3925, 3926, 3927, 3928, 3929, 3930, 3931, 3933, 3934, 3936, 3937, 3938, 3939, 3940, 3941, 3942, 3943, 3944, 3945, 3946, 3950, 3951, 3953, 3954, 3956, 3957, 3958, 3959, 3960, 3962, 3964, 3965, 3966, 3967, 3971, 3975, 3976, 3977, 3978, 3979, 3980, 3981, 3984, 3987, 3988, 3989, 3990, 3991, 3992, 3995, 3996 
+  3000, 3001, 3002, 3003, 3004, 3005, 3006, 3008, 3010, 3011, 3012, 3013, 3015, 3016, 3018, 3019,
+  3020, 3021, 3022, 3023, 3024, 3025, 3026, 3027, 3028, 3029, 3030, 3031, 3032, 3033, 3034, 3036,
+  3037, 3038, 3039, 3040, 3041, 3042, 3043, 3044, 3045, 3046, 3047, 3048, 3049, 3050, 3051, 3052,
+  3053, 3054, 3055, 3056, 3057, 3058, 3059, 3060, 3061, 3062, 3063, 3064, 3065, 3066, 3067, 3068,
+  3070, 3071, 3072, 3073, 3074, 3075, 3076, 3078, 3079, 3081, 3082, 3083, 3084, 3085, 3086, 3087,
+  3088, 3089, 3090, 3091, 3093, 3094, 3095, 3096, 3097, 3099, 3101, 3102, 3103, 3104, 3105, 3106,
+  3107, 3108, 3109, 3111, 3113, 3114, 3115, 3116, 3121, 3122, 3123, 3124, 3125, 3126, 3127, 3128,
+  3129, 3130, 3131, 3132, 3133, 3134, 3135, 3136, 3137, 3138, 3139, 3140, 3141, 3142, 3143, 3144,
+  3145, 3146, 3147, 3148, 3149, 3150, 3151, 3152, 3153, 3154, 3155, 3156, 3158, 3159, 3160, 3161,
+  3162, 3163, 3164, 3165, 3166, 3167, 3168, 3169, 3170, 3171, 3172, 3173, 3174, 3175, 3176, 3177,
+  3178, 3179, 3180, 3181, 3182, 3183, 3184, 3185, 3186, 3187, 3188, 3189, 3190, 3191, 3192, 3193,
+  3194, 3195, 3196, 3197, 3198, 3199, 3200, 3201, 3202, 3204, 3205, 3206, 3207, 3211, 3212, 3213,
+  3214, 3215, 3216, 3217, 3218, 3219, 3220, 3221, 3222, 3223, 3224, 3225, 3226, 3227, 3228, 3230,
+  3231, 3232, 3233, 3234, 3235, 3236, 3237, 3238, 3239, 3240, 3241, 3242, 3243, 3249, 3250, 3251,
+  3254, 3260, 3264, 3265, 3266, 3267, 3268, 3269, 3270, 3271, 3272, 3273, 3274, 3275, 3276, 3277,
+  3278, 3279, 3280, 3281, 3282, 3283, 3284, 3285, 3286, 3287, 3289, 3292, 3293, 3294, 3300, 3301,
+  3302, 3303, 3304, 3305, 3309, 3310, 3311, 3312, 3314, 3315, 3317, 3318, 3319, 3321, 3322, 3323,
+  3324, 3325, 3328, 3329, 3330, 3331, 3332, 3333, 3334, 3335, 3336, 3337, 3338, 3340, 3341, 3342,
+  3345, 3350, 3351, 3352, 3353, 3354, 3355, 3356, 3357, 3358, 3360, 3361, 3363, 3364, 3370, 3371,
+  3373, 3374, 3375, 3377, 3378, 3379, 3380, 3381, 3384, 3385, 3387, 3388, 3390, 3391, 3392, 3393,
+  3395, 3396, 3399, 3400, 3401, 3402, 3407, 3409, 3412, 3413, 3414, 3415, 3418, 3419, 3420, 3423,
+  3424, 3427, 3428, 3429, 3430, 3431, 3432, 3433, 3434, 3435, 3437, 3438, 3440, 3441, 3442, 3444,
+  3446, 3447, 3448, 3450, 3451, 3453, 3458, 3460, 3461, 3462, 3463, 3464, 3465, 3467, 3468, 3469,
+  3472, 3475, 3477, 3478, 3480, 3482, 3483, 3485, 3487, 3488, 3489, 3490, 3491, 3494, 3496, 3498,
+  3500, 3501, 3502, 3505, 3506, 3507, 3509, 3512, 3515, 3516, 3517, 3518, 3520, 3521, 3522, 3523,
+  3525, 3527, 3529, 3530, 3531, 3533, 3537, 3540, 3542, 3544, 3546, 3549, 3550, 3551, 3552, 3554,
+  3555, 3556, 3557, 3558, 3559, 3561, 3562, 3563, 3564, 3565, 3566, 3567, 3568, 3570, 3571, 3572,
+  3573, 3575, 3576, 3579, 3580, 3581, 3583, 3584, 3585, 3586, 3588, 3589, 3590, 3591, 3594, 3595,
+  3596, 3597, 3599, 3607, 3608, 3610, 3612, 3614, 3616, 3617, 3618, 3619, 3620, 3621, 3622, 3623,
+  3624, 3629, 3630, 3631, 3632, 3633, 3634, 3635, 3636, 3637, 3638, 3639, 3640, 3641, 3643, 3644,
+  3646, 3647, 3649, 3658, 3659, 3660, 3661, 3662, 3663, 3664, 3665, 3666, 3669, 3670, 3671, 3672,
+  3673, 3675, 3676, 3677, 3678, 3682, 3683, 3685, 3687, 3688, 3689, 3690, 3691, 3694, 3695, 3697,
+  3698, 3699, 3700, 3701, 3704, 3705, 3707, 3708, 3709, 3711, 3712, 3713, 3714, 3715, 3717, 3718,
+  3719, 3720, 3722, 3723, 3724, 3725, 3726, 3727, 3728, 3730, 3732, 3733, 3735, 3736, 3737, 3738,
+  3739, 3740, 3741, 3744, 3746, 3747, 3749, 3750, 3751, 3752, 3753, 3754, 3755, 3756, 3757, 3758,
+  3759, 3760, 3761, 3762, 3763, 3764, 3765, 3766, 3767, 3770, 3775, 3777, 3778, 3779, 3781, 3782,
+  3783, 3785, 3786, 3787, 3788, 3789, 3791, 3792, 3793, 3795, 3796, 3797, 3799, 3800, 3802, 3803,
+  3804, 3805, 3806, 3807, 3808, 3809, 3810, 3812, 3813, 3814, 3815, 3816, 3818, 3820, 3821, 3822,
+  3823, 3824, 3825, 3831, 3832, 3833, 3835, 3840, 3841, 3842, 3844, 3847, 3850, 3851, 3852, 3853,
+  3854, 3856, 3857, 3858, 3859, 3860, 3862, 3864, 3865, 3869, 3870, 3871, 3873, 3874, 3875, 3878,
+  3880, 3882, 3885, 3886, 3887, 3888, 3889, 3890, 3891, 3892, 3893, 3895, 3896, 3898, 3900, 3902,
+  3903, 3904, 3909, 3910, 3911, 3912, 3913, 3915, 3916, 3918, 3919, 3920, 3921, 3922, 3923, 3925,
+  3926, 3927, 3928, 3929, 3930, 3931, 3933, 3934, 3936, 3937, 3938, 3939, 3940, 3941, 3942, 3943,
+  3944, 3945, 3946, 3950, 3951, 3953, 3954, 3956, 3957, 3958, 3959, 3960, 3962, 3964, 3965, 3966,
+  3967, 3971, 3975, 3976, 3977, 3978, 3979, 3980, 3981, 3984, 3987, 3988, 3989, 3990, 3991, 3992,
+  3995, 3996,
 ])
+
 // 验证邮政编码
 const validatePostcode = () => {
   // 只允许输入数字，并限制长度为4位
-  postcode.value = postcode.value.replace(/\D/g, '').slice(0, 4);
+  postcode.value = postcode.value.replace(/\D/g, '').slice(0, 4)
 
   // 转换为数值并进行范围验证
-  const postcodeNumber = Number(postcode.value);
+  const postcodeNumber = Number(postcode.value)
 
   // 邮政编码必须是4位数，且在3000-3338之间
-  postcodeError.value = !(postcode.value.length === 4 && allowedPostcodes.has(postcodeNumber));
-};
-
+  postcodeError.value = !(postcode.value.length === 4 && allowedPostcodes.has(postcodeNumber))
+}
 
 // 获取 UV 数据
 const fetchUVData = async () => {
@@ -144,9 +196,13 @@ const fetchUVData = async () => {
       uvData.value = {
         location: 'Unknown',
         postcode: postcode.value,
-        data: response.data
+        data: response.data,
       }
-    } else if (response.data && typeof response.data === 'object' && Array.isArray(response.data.data)) {
+    } else if (
+      response.data &&
+      typeof response.data === 'object' &&
+      Array.isArray(response.data.data)
+    ) {
       uvData.value = response.data
     } else {
       console.error('❌ Unexpected API data format:', response.data)
@@ -156,7 +212,7 @@ const fetchUVData = async () => {
     console.log('✅ Updated uvData:', uvData.value)
 
     await nextTick()
-    setTimeout(generateChart, 100)  // 延迟调用，确保 DOM 更新完成
+    setTimeout(generateChart, 100) // 延迟调用，确保 DOM 更新完成
   } catch (err) {
     error.value = 'Failed to fetch UV data. Please try again.'
     console.error('❌ Error fetching UV data:', err)
@@ -166,17 +222,6 @@ const fetchUVData = async () => {
   }
 }
 
-
-
-const uvLevelClass = computed(() => {
-  const index = latestUVIndex.value
-  if (index <= 2) return 'low'
-  if (index <= 5) return 'moderate'
-  if (index <= 7) return 'high'
-  if (index <= 10) return 'very-high'
-  return 'extreme'
-})
-
 const getUVColor = (index: number) => {
   if (index <= 2) return '#00C853' // 绿色
   if (index <= 5) return '#FFD600' // 黄色
@@ -187,46 +232,46 @@ const getUVColor = (index: number) => {
 
 // 生成 UV 图表
 const generateChart = async () => {
-  await nextTick();
+  await nextTick()
 
   if (!uvChart.value) {
-    console.warn("🟡 uvChart ref is null, retrying in 100ms...");
-    setTimeout(generateChart, 100);
-    return;
+    console.warn('🟡 uvChart ref is null, retrying in 100ms...')
+    setTimeout(generateChart, 100)
+    return
   }
 
-  const ctx = uvChart.value.getContext("2d");
+  const ctx = uvChart.value.getContext('2d')
   if (!ctx) {
-    console.error("❌ Canvas context is null!");
-    return;
+    console.error('❌ Canvas context is null!')
+    return
   }
 
-  console.log("✅ Creating Chart with Dynamic Segment Colors!");
-
-  const labels = uvData.value?.data?.map((entry) =>
-  new Date(entry.timestamp * 1000).toLocaleTimeString("en-AU", {
-    hour: "2-digit",
-    minute: "2-digit",
-  })
-) || [];
+  console.log('✅ Creating Chart with Dynamic Segment Colors!')
 
-const uvValues = uvData.value?.data?.map((entry) => entry.uvIndex) || [];
+  const labels =
+    uvData.value?.data?.map((entry) =>
+      new Date(entry.timestamp * 1000).toLocaleTimeString('en-AU', {
+        hour: '2-digit',
+        minute: '2-digit',
+      }),
+    ) || []
 
+  const uvValues = uvData.value?.data?.map((entry) => entry.uvIndex) || []
 
   // **获取数据点颜色**
-  const borderColors = uvValues.map((value) => getUVColor(value));
+  const borderColors = uvValues.map((value) => getUVColor(value))
 
   if (chartInstance.value) {
-    chartInstance.value.destroy();
+    chartInstance.value.destroy()
   }
 
   chartInstance.value = new Chart(ctx, {
-    type: "line",
+    type: 'line',
     data: {
       labels,
       datasets: [
         {
-          label: "UV Index Over Time",
+          label: 'UV Index Over Time',
           data: uvValues,
           borderColor: borderColors, // 数据点颜色
           pointBackgroundColor: borderColors, // 数据点颜色
@@ -235,7 +280,7 @@ const uvValues = uvData.value?.data?.map((entry) => entry.uvIndex) || [];
           segment: {
             borderColor: (ctx) => {
               // **ctx.p1DataIndex 获取当前 segment 的起始数据点索引**
-              return borderColors[ctx.p1DataIndex] || "#000"; // 默认值
+              return borderColors[ctx.p1DataIndex] || '#000' // 默认值
             },
           },
           fill: false, // 不填充区域
@@ -245,44 +290,37 @@ const uvValues = uvData.value?.data?.map((entry) => entry.uvIndex) || [];
     options: {
       responsive: true,
       plugins: {
-      legend: {
-        display: true, // 显示图例
-        position: "top",
-        labels: {
-          color: "#333",
-          font: { size: 14, weight: "bold" },
-          usePointStyle: true,
-          padding: 20,
-          generateLabels: (chart) => [
-            { text: "0-2 (Low)", fillStyle: "#00C853", strokeStyle: "#00C853" },
-            { text: "3-5 (Moderate)", fillStyle: "#FFD600", strokeStyle: "#FFD600" },
-            { text: "6-7 (High)", fillStyle: "#FF6D00", strokeStyle: "#FF6D00" },
-            { text: "8-10 (Very High)", fillStyle: "#D50000", strokeStyle: "#D50000" },
-            { text: "11+ (Extreme)", fillStyle: "#6A1B9A", strokeStyle: "#6A1B9A" },
-          ],
+        legend: {
+          display: true, // 显示图例
+          position: 'top',
+          labels: {
+            color: '#333',
+            font: { size: 14, weight: 'bold' },
+            usePointStyle: true,
+            padding: 20,
+            generateLabels: () => [
+              { text: '0-2 (Low)', fillStyle: '#00C853', strokeStyle: '#00C853' },
+              { text: '3-5 (Moderate)', fillStyle: '#FFD600', strokeStyle: '#FFD600' },
+              { text: '6-7 (High)', fillStyle: '#FF6D00', strokeStyle: '#FF6D00' },
+              { text: '8-10 (Very High)', fillStyle: '#D50000', strokeStyle: '#D50000' },
+              { text: '11+ (Extreme)', fillStyle: '#6A1B9A', strokeStyle: '#6A1B9A' },
+            ],
+          },
         },
       },
-    },
       scales: {
-        x: { title: { display: true, text: "Time" } },
+        x: { title: { display: true, text: 'Time' } },
         y: {
-          title: { display: true, text: "UV Index" },
+          title: { display: true, text: 'UV Index' },
           beginAtZero: true,
           suggestedMax: 12,
         },
       },
     },
-  });
-};
-
-
+  })
+}
 </script>
 
-
-
-
-
-
 <style scoped>
 .page-container {
   display: flex;
@@ -843,4 +881,18 @@ h2 {
   background: linear-gradient(135deg, #9c27b0, #7b1fa2);
   border: 2px solid rgba(156, 39, 176, 0.3);
 }
+
+.chart-description {
+  margin-top: 30px;
+  padding: 20px;
+  background-color: rgba(255, 255, 255, 0.8);
+  border-left: 4px solid #2196f3;
+  border-radius: 10px;
+  box-shadow: 0 5px 15px rgba(33, 150, 243, 0.2);
+  text-align: left;
+  font-size: 15px;
+  line-height: 1.6;
+  color: #444;
+  animation: fadeIn 0.8s ease;
+}
 </style>
